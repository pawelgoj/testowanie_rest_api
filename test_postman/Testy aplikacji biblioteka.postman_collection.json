{
	"info": {
		"_postman_id": "ff5963d8-d419-4f28-a086-e97a228ebb30",
		"name": "Testy aplikacji biblioteka",
		"description": "Backed API for menaging authors, books, users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16541790"
	},
	"item": [
		{
			"name": "Authors",
			"item": [
				{
					"name": "Check All authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/autors?sort=birth_date&first_name=Andrzej",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"autors"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,first_name",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "birth_date"
								},
								{
									"key": "first_name",
									"value": "Andrzej"
								},
								{
									"key": "birth_date[gte]",
									"value": "03-12-1960",
									"disabled": true
								},
								{
									"key": "id[lt]",
									"value": "5",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "3",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4LCJleHAiOjE2Mjk0MDg5MTV9.mwilWlwyRoNmSIS7T1BL6WAiWCmrJX5HhhrPAcs9OYI",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Kamilo\",\r\n    \"last_name\": \"Adamowiczo\",\r\n    \"birth_date\": \"03-04-1887\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/autors",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"autors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get 1 author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/autors/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"autors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Piotr\",\r\n    \"last_name\": \"Bagins\",\r\n    \"birth_date\": \"01-03-1700\" \r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/autors/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"autors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Athor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4LCJleHAiOjE2Mjk0MDkwMDV9.GAHBhjopwMTU1x5Ffvg2C46-Fx4gz0Nu_T81U8RFxsQ",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/autors/18",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"autors",
								"18"
							]
						}
					},
					"response": []
				}
			],
			"description": "Test methods related to authors"
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "Get books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/books?page=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4LCJleHAiOjE2Mjk0MTAwNjV9.NbapNarBJ9_iT5e3xWX7QU2XT6WuKIdlfsUthtDJ54M",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/books/5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"books",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update single book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Test Book\",\r\n    \"isbn\": 1231294532312,\r\n    \"number_of_pages\": 300,\r\n    \"description\": \"It is a test book\",\r\n    \"author_id\": 10\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/books/5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"books",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Error response",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"const testDataMessage = \"Book with ISBN 3451524793616 already exists\"\r",
									"pm.test(\"message test in json\"), () => {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"testDataMessage\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Test Book\",\r\n    \"isbn\": 3451524793616,\r\n    \"number_of_pages\": 300,\r\n    \"description\": \"It is a test book\",\r\n    \"author_id\": 10\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/books/5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"books",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete single book",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/books/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"books",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all books by author",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/authors/6/books",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authors",
								"6",
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new book",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"New book\",\r\n    \"number_of_pages\": 567,\r\n    \"isbn\": 3333333333333,\r\n    \"description\": \"Some description\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/authors/20/books",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authors",
								"20",
								"books"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Book resorce management"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Registrate new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// generate random username and mail \r",
									"const randomNumber = Math.floor(Math.random() * 10000);\r",
									"let userName = 'test';\r",
									"let email = '@test.com';\r",
									"userName = userName + randomNumber.toString();\r",
									"email = userName + randomNumber.toString() + email;\r",
									"pm.environment.set(\"userName\", userName);\r",
									"pm.environment.set(\"email\", email);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Check status code \r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.unset(\"userName\");\r",
									"pm.environment.unset(\"email\");\r",
									"\r",
									"//Get token from response \r",
									"pm.test(\"Get token\",  function () {\r",
									"    pm.environment.set(\"TOKEN\", pm.response.json().token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{userName}}\",\r\n    \"password\": \"123456\",\r\n    \"email\": \"{{email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login to the user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Get token from response \r",
									"pm.environment.set(\"TOKEN\", pm.response.json().token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test2548\",\r\n    \"password\": \"213456\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/auth/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						},
						"description": "Get current user details"
					},
					"response": []
				},
				{
					"name": "Update user password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"current_password\": \"123456\",\r\n    \"new_password\": \"213456\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/update/password",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"update",
								"password"
							]
						},
						"description": "Update user password"
					},
					"response": []
				},
				{
					"name": "Update User Data",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test1111\",\r\n    \"email\": \"test1111@test.com\"   \r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/update/data",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"update",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Try SQL injection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"description": "Authentication endpoints"
		}
	]
}