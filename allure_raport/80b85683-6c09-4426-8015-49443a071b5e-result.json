{"name": "test_register_new_user", "status": "failed", "statusDetails": {"message": "AssertionError: assert (400 == 200)\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_authentication.TestAuthentication object at 0x0000028804B4C710>\nurl_reqres_in = 'https://reqres.in/api', faker = <faker.generator.Generator object at 0x0000028804C3B890>\n\n    @pytest.mark.usefixtures(\"created_users\")\n    def test_register_new_user(self, url_reqres_in: str, faker: ModuleType):\n    \n        # Given\n        self.logger.info('Get unique eamil and password of user')\n        user = get_unique_user_email_password(faker, self.already_created_users)\n    \n        url = url_reqres_in + '/register'\n        user_s: str = json.dumps(user)\n    \n        # When\n        self.logger.info(f'POST on {url}')\n        response = requests.request(\n            \"POST\", url, headers=self.headers, data=user_s)\n    \n        response_dict = response.json()\n    \n        if 'id' in response_dict.keys():\n            user.update({\"id\": response_dict['id']})\n    \n        self.already_created_users += [user]\n        self.new_user_data = user\n    \n        # Then\n>       assert response.status_code == 200\\\n            and 'id' in response_dict.keys()\\\n            and 'token' in response_dict.keys()\nE       assert (400 == 200)\nE        +  where 400 = <Response [400]>.status_code\n\ntests\\test_authentication.py:40: AssertionError"}, "attachments": [{"name": "log", "source": "c0a1c948-b410-483d-a07c-8aaa1d8a223f-attachment.txt", "type": "text/plain"}], "start": 1678215447901, "stop": 1678215448184, "uuid": "c979bbe4-35c5-4e58-b02b-5f1393e92784", "historyId": "33ce0ed8b8735a1445003930a9a85a71", "testCaseId": "824e88557b137c8c99be9c43ea682ef2", "fullName": "tests.test_authentication.TestAuthentication#test_register_new_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('created_users')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_authentication"}, {"name": "subSuite", "value": "TestAuthentication"}, {"name": "host", "value": "LAPTOP-DKHHR5FU"}, {"name": "thread", "value": "25692-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_authentication"}]}